#[derive(Debug, Clone)]
pub enum MediaAPISort {
    ID,
    IdDesc,
    TitleRomaji,
    TitleRomajiDesc,
    TitleEnglish,
    TitleEnglishDesc,
    TitleNative,
    TitleNativeDesc,
    Type,
    TypeDesc,
    Format,
    FormatDesc,
    StartDate,
    StartDateDesc,
    EndDate,
    EndDateDesc,
    Score,
    ScoreDesc,
    Popularity,
    PopularityDesc,
    Trending,
    TrendingDesc,
    Episodes,
    EpisodesDesc,
    Duration,
    DurationDesc,
    Status,
    StatusDesc,
    Chapters,
    ChaptersDesc,
    Volumes,
    VolumesDesc,
    UpdatedAt,
    UpdatedAtDesc,
    SearchMatch,
    Favorites,
    FavoritesDesc,
}

impl From<String> for MediaAPISort {
    fn from(value: String) -> Self {
        match value.as_str() {
            "ID" => MediaAPISort::ID,
            "ID_DESC" => MediaAPISort::IdDesc,
            "TITLE_ROMAJI" => MediaAPISort::TitleRomaji,
            "TITLE_ROMAJI_DESC" => MediaAPISort::TitleRomajiDesc,
            "TITLE_ENGLISH" => MediaAPISort::TitleEnglish,
            "TITLE_ENGLISH_DESC" => MediaAPISort::TitleEnglishDesc,
            "TITLE_NATIVE" => MediaAPISort::TitleNative,
            "TITLE_NATIVE_DESC" => MediaAPISort::TitleNativeDesc,
            "TYPE" => MediaAPISort::Type,
            "TYPE_DESC" => MediaAPISort::TypeDesc,
            "FORMAT" => MediaAPISort::Format,
            "FORMAT_DESC" => MediaAPISort::FormatDesc,
            "START_DATE" => MediaAPISort::StartDate,
            "START_DATE_DESC" => MediaAPISort::StartDateDesc,
            "END_DATE" => MediaAPISort::EndDate,
            "END_DATE_DESC" => MediaAPISort::EndDateDesc,
            "SCORE" => MediaAPISort::Score,
            "SCORE_DESC" => MediaAPISort::ScoreDesc,
            "POPULARITY" => MediaAPISort::Popularity,
            "POPULARITY_DESC" => MediaAPISort::PopularityDesc,
            "TRENDING" => MediaAPISort::Trending,
            "TRENDING_DESC" => MediaAPISort::TrendingDesc,
            "EPISODES" => MediaAPISort::Episodes,
            "EPISODES_DESC" => MediaAPISort::EpisodesDesc,
            "DURATION" => MediaAPISort::Duration,
            "DURATION_DESC" => MediaAPISort::DurationDesc,
            "STATUS" => MediaAPISort::Status,
            "STATUS_DESC" => MediaAPISort::StatusDesc,
            "CHAPTERS" => MediaAPISort::Chapters,
            "CHAPTERS_DESC" => MediaAPISort::ChaptersDesc,
            "VOLUMES" => MediaAPISort::Volumes,
            "VOLUMES_DESC" => MediaAPISort::VolumesDesc,
            "UPDATED_AT" => MediaAPISort::UpdatedAt,
            "UPDATED_AT_DESC" => MediaAPISort::UpdatedAtDesc,
            "SEARCH_MATCH" => MediaAPISort::SearchMatch,
            "FAVORITES" => MediaAPISort::Favorites,
            "FAVORITES_DESC" => MediaAPISort::FavoritesDesc,
            _ => MediaAPISort::ID,
        }
    }
}

impl From<MediaAPISort> for String {
    fn from(sort: MediaAPISort) -> Self {
        match sort {
            MediaAPISort::ID => "ID".to_string(),
            MediaAPISort::IdDesc => "ID_DESC".to_string(),
            MediaAPISort::TitleRomaji => "TITLE_ROMAJI".to_string(),
            MediaAPISort::TitleRomajiDesc => "TITLE_ROMAJI_DESC".to_string(),
            MediaAPISort::TitleEnglish => "TITLE_ENGLISH".to_string(),
            MediaAPISort::TitleEnglishDesc => "TITLE_ENGLISH_DESC".to_string(),
            MediaAPISort::TitleNative => "TITLE_NATIVE".to_string(),
            MediaAPISort::TitleNativeDesc => "TITLE_NATIVE_DESC".to_string(),
            MediaAPISort::Type => "TYPE".to_string(),
            MediaAPISort::TypeDesc => "TYPE_DESC".to_string(),
            MediaAPISort::Format => "FORMAT".to_string(),
            MediaAPISort::FormatDesc => "FORMAT_DESC".to_string(),
            MediaAPISort::StartDate => "START_DATE".to_string(),
            MediaAPISort::StartDateDesc => "START_DATE_DESC".to_string(),
            MediaAPISort::EndDate => "END_DATE".to_string(),
            MediaAPISort::EndDateDesc => "END_DATE_DESC".to_string(),
            MediaAPISort::Score => "SCORE".to_string(),
            MediaAPISort::ScoreDesc => "SCORE_DESC".to_string(),
            MediaAPISort::Popularity => "POPULARITY".to_string(),
            MediaAPISort::PopularityDesc => "POPULARITY_DESC".to_string(),
            MediaAPISort::Trending => "TRENDING".to_string(),
            MediaAPISort::TrendingDesc => "TRENDING_DESC".to_string(),
            MediaAPISort::Episodes => "EPISODES".to_string(),
            MediaAPISort::EpisodesDesc => "EPISODES_DESC".to_string(),
            MediaAPISort::Duration => "DURATION".to_string(),
            MediaAPISort::DurationDesc => "DURATION_DESC".to_string(),
            MediaAPISort::Status => "STATUS".to_string(),
            MediaAPISort::StatusDesc => "STATUS_DESC".to_string(),
            MediaAPISort::Chapters => "CHAPTERS".to_string(),
            MediaAPISort::ChaptersDesc => "CHAPTERS_DESC".to_string(),
            MediaAPISort::Volumes => "VOLUMES".to_string(),
            MediaAPISort::VolumesDesc => "VOLUMES_DESC".to_string(),
            MediaAPISort::UpdatedAt => "UPDATED_AT".to_string(),
            MediaAPISort::UpdatedAtDesc => "UPDATED_AT_DESC".to_string(),
            MediaAPISort::SearchMatch => "SEARCH_MATCH".to_string(),
            MediaAPISort::Favorites => "FAVORITES".to_string(),
            MediaAPISort::FavoritesDesc => "FAVORITES_DESC".to_string(),
        }
    }
}
